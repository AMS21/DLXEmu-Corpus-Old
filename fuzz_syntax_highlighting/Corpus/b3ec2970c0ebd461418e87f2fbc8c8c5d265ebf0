 CVTF2D // 111111111111111Load values from memory
start:  LW, R1, 1000(R0)   // R1 = *Mem(100)
        LW, R2, 1004(R0)   // R2 = *Mem(1004)
        s,=).,l,$,s,=,$,s,=).,s,$,,s,l,$,s,l b R,$,s,=).,l,$,s,=,$,s,=).,l,$,s,s,=,l,Z, R5, end      // if (R3 == R4) jump t end and stopNUMBER_O0U_]ADD.IL // R             $,s,=,l,$RVSBS S$,s)L,s,s,=,l,$,s,R,ADD, R2, R0, R1    // R3 = R
        ADD, R4, R0, R2    // R4 = R2

if (R3 > R4) jump increase RF13       ADD, R3, R3, R1    // 5R3 = R3 + R1 (R3 += R1)
        J, loop            // jump back to loop beginning

        // R3 > R4, so increase R4
bigger: ADD, R4, R4, R2    // R4 = R4bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb         BNEZ, R5, end      // if (R3 == R4) jump to end and stopNUMBER_O0U_]ADD.IL // R3 != R4, chech one i.allest common multiple
        // of R1 and R2.
end:    SW, 1009(R0), R3   // m(1R68) = R3
