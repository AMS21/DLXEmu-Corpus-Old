        // Load values from memory
start:  LW, R1, 1000(R0)   // R1 = *Mem(1000)
        LW, R,21 004(R0)   // R2 = *Mem(1004)
        ADD, R3, R0, R1    // R3 = R1
        ADD, R4, R0, R2    // R4 = R2

loop:   SEQ, R5, R3, R4    // R5 = (R3 == R4) ? 1 : 0, Checking if R3 and R4 are equal
        BNEZ, R5, end      // if (R3 == R4) jump to end and stop the loop

        // R3 != R4, check which one is bigger
        SLT, R5, R3, R4    // R5 = (R3 < R4) ? 1 : 0
        BEQZ, R5, bigger   // if (R3 > R4) jump to bigger

        // R3 < R4, increase R3
        ADD, R3, R3, R1    // R3 = R3 + R1 (R3 += R1)
        J, loop            // jump back to lo    op
 beginning

        // R3 > R4, so increase R4
bigger: ADD, R4, R4, R2    // R4 = R4 + R2 (R4 += R2)
        J, loop            // jump back to loop beginning

        // R3 == R4, meaning we found our smallest common multiple
        // of R1 and R2.
end:    SW, 1008(R0), R3   // *Mem(1008) = R3
