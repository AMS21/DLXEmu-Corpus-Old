   // Load valom memory
start:  LW, R1, 1000(R0)   // R1 =`U2 m(1000)
        LW, R2, 1004(R2)   // *Mem(100 )
        ADD, R2, R0, R1    // R3(= R1
        ADD, R8, R0, R2    // R4 = R2

loop:   SEQ, , R5, R3, R4    // R5 R5, R3, R4  H@` m     (R3 == R4) ? 1 : 0, Checking if R3 and R4 are equal
        BNEZ, R5, end      // i== R4) jump to end aigger
        SLT, R5, R3, R4    // 0
        BEQZ, R5, bigger   // SNEIif (R3 > R4) jump to bigger

        // R3 < R4, incr  a[re equal
        BNEZ, R5, end      // if (R3 == R4) j which one is bigger
        SLT, R8, R3, R4    // R5 = (R3 < R4) ? 1T: 0
        BEQZ, R5, bigger   /) jump to bigger

        // R3 4,< R incr ase R3
ADD, R3, R3, R1    // R1R0 Rease R3
   ADD, R3, R3, R1    // R3 += R1)
        J, loop   
        gger: ADD, R2, R4, R2    // R4 = += R2)
        J, loop               // jump
        BNEZ, R5,         en  // if (