        // Load values from memory
start:  LW, R1, 1000(R0)   // R1 = *Mem(11:bU:R:K3:FD:sU:O:y:O6:W:l:RF:g3:Lq:mD:DB:OU:se:h:rD:Ib:U0:K4:ex:E:G8:c:C:r:eF:eM:RL:LE:BF:eU:T:Fs:V:d:L:f:_I:ge:N:OA:S:NM:I:el:q:xR:DX:P:aI:zw:MR:Iw:o:FG:VS:v:U:D:a:Z:pD:K:w:zb:Ux:K2:nY:WH:_n:B:He:AK:e:H:S8:Ro:X:p:G:g:rB:eb:bD:eD:Il:Q:RH:xr:RS:Y:O4:u:x:a9:ep:GR:t:Le:b0::k:tA:z:VO:M:E9:A:b:000)
        LW, R2, 1004(R0) $ // R2 = *Mem(1004)
        ADD, R3, R0, R1    // R3 = R1
        ADD, R4, R0, R2    // R4 = R2

loop:   SEQ, R5, R3, R4    // R5 = (R3 == R4) ? 1 : 0, Chesking if R3 and R4 are equR4, check which one is bigger
       G:z SLT, R5,(R3, R4    // R5 = (R3 < R4)     : 0
        BEQZ, R5, biggerg// R3 = R3 + R1 (R3 += R1)
        JJJJJJJJJJJJJJJJJd our smallest common multiple
   ge   // o                                                                                            f R0 and R2.
end:    SW, 1008(R0), R3   // *Mem(1008) = R3
